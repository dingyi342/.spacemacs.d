;;; packages.el --- my-fonts layer packages file for Spacemacs.
;;
;; Copyright (c) 2012-2018 Sylvain Benner & Contributors
;;
;; Author:  <dingyi@dingyi>
;; URL: https://github.com/syl20bnr/spacemacs
;;
;; This file is not part of GNU Emacs.
;;
;;; License: GPLv3

;;; Commentary:
;; 为compnay补全窗口单独设置字体，不然太大了。

;;; Code:

(defconst my-fonts-packages
  '(
    cnfonts
    )
  )

(defun my-fonts/init-cnfonts ()
  "设置字体，好看美观，中英文对齐等.
SPC z x 'spacemacs/scale-font-transient-state/body 来调整字体
1. decribe-char
2. (cl-prettyprint (font-family-list))
3. cnfonts-insert-fontname, 选择一个可用字体插入到光标处，可用于手动添加到cnfonts可识别的字体"
  (use-package cnfonts
    :config
    (spacemacs/set-leader-keys "Tc" 'spacemacs/cnfonts-transient-state/body)

    ;; Auto generated by cnfonts
    ;; <https://github.com/tumashu/cnfonts>
    ;; (set-face-attribute
    ;;  'default nil
    ;;  :font (font-spec :name "-CYRE-Inconsolata-normal-normal-normal-*-*-*-*-*-m-0-iso10646-1"
    ;;                   :weight 'normal
    ;;                   :slant 'normal
    ;;                   :size 15.0))
    ;; (dolist (charset '(kana han symbol cjk-misc bopomofo))
    ;;   (set-fontset-font
    ;;    (frame-parameter nil 'font)
    ;;    charset
    ;;    (font-spec :name "-MS  -Microsoft YaHei-normal-normal-normal-*-*-*-*-*-*-0-iso10646-1"
    ;;               :weight 'normal
    ;;               :slant 'normal
    ;;               :size 15.0)))

    ;; ;; ;;;; ;; Auto generated by cnfonts
    ;;  ;; <https://github.com/tumashu/cnfonts>
    (defun my-default-frame-face ()
      (interactive)
      (set-face-attribute
       'default nil
       :font (font-spec :name "-SRC-Hack-bold-normal-normal-*-*-*-*-*-m-0-iso10646-1"
                        :weight 'normal
                        :slant 'normal
                        :size 16.0))
      (dolist (charset '(kana han symbol cjk-misc bopomofo))
        (set-fontset-font
         (frame-parameter nil 'font)
         charset
         (font-spec :name "-GOOG-Sarasa Gothic J-bold-italic-normal-*-*-*-*-*-*-0-iso10646-1"
                    :weight 'normal
                    :slant 'normal
                    :size 19.5))nil)
      ;; 窗口初始不透明
      ;; (set-frame-parameter (selected-frame) 'alpha '(100 100))
      ;; (add-to-list 'initial-frame-alist '(alpha 100 100))
      )

    ;; If not in terminal, load default style
    (if (display-graphic-p)
        (my-default-frame-face))
    ;; For emacsclient: apply default frame style to each new frame
    (add-hook 'after-make-frame-functions
              (lambda (new-frame)
                (select-frame new-frame)
                (my-default-frame-face)))

    ))

;; (defcustom my-font-size 16.0 "My font size")
;; (defcustom my-cjk-font-size 19.5 "My cjk font size")

;; (set-face-attribute
;;  'default nil
;;  :font (font-spec :name "-SRC-Hack-bold-normal-normal-*-*-*-*-*-m-0-iso10646-1"
;;                   :weight 'normal
;;                   :slant 'normal
;;                   :size 16.5))
;; (dolist (charset '(kana han symbol cjk-misc bopomofo))
;;   (set-fontset-font
;;    (frame-parameter nil 'font)
;;    charset
;;    (font-spec :name "-GOOG-Sarasa Gothic J-bold-italic-normal-*-*-*-*-*-*-0-iso10646-1"
;;               :weight 'normal
;;               :slant 'normal
;;               :size 19.5)) nil)

;; ;; (setq my-font-name "DejaVu Sans Mono")
;; (defcustom my-font-size 12 "My font size")

;; (defun set-frame-font-size (&optional font-size)
;;   "Change frame font size to FONT-SIZE.
;; If no FONT-SIZE provided, reset the size to its default variable."
;;   (let ((font-size
;;      (or font-size
;;        (car (get 'my-font-size 'standard-value)))))
;;     (customize-set-variable 'my-font-size font-size)
;;     (set-frame-font
;;      (format "%s %d" my-font-name font-size) nil t)))

;; (defun increase-frame-font ()
;;   "Increase frame font by one."
;;   (interactive)
;;   (set-frame-font-size (+ my-font-size 1)))

;; (defun decrease-frame-font ()
;;   "Decrease frame font by one."
;;   (interactive)
;;   (set-frame-font-size (- my-font-size 1)))

;; (defun reset-frame-font ()
;;   "Reset frame font to its default value."
;;   (interactive)
;;   (set-frame-font-size))

;;; packages.el ends here
